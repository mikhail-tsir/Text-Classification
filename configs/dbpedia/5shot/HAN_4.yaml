# global parameters
model_name: han  # 'han', 'fasttext', 'attbilstm', 'textcnn'
                 # refer to README.md for more info about each model

# dataset parameters
dataset: dbpedia  # 'ag_news', 'dbpedia', 'yelp_review_polarity', 'yelp_review_full', 'yahoo_answers', 'amazon_review_polarity', 'amazon_review_full'
                    # refer to README.md for more info about each dataset
dataset_path: /home/mtsirlin/scratch/hedwig/.local_data/dbpedia/5shot/4  # folder with dataset
output_path: /home/mtsirlin/scratch/Text-Classification/data/dbpedia/5shot/4 # folder with data files saved by preprocess.py

# preprocess parameters
sentence_limit: 15
word_limit: 20
min_word_count: 5

# word embeddings parameters
emb_pretrain: False  # false: initialize embedding weights randomly
                    # true: load pre-trained word embeddings
emb_folder: /home/mtsirlin/scratch/hedwig-data/embeddings/word2vec  # only makes sense when `emb_pretrain: False`
emb_filename: GoogleNews-vectors-negative300.txt  # only makes sense when `emb_pretrain: False`
emb_size: 256  # word embedding size
            # only makes sense when `emb_pretrain: False`
fine_tune_word_embeddings: False  # fine-tune word embeddings?

# model parameters
word_rnn_size: 50  # word RNN size
sentence_rnn_size: 50  # character RNN size
word_rnn_layers: 1  # number of layers in character RNN
sentence_rnn_layers: 1  # number of layers in word RNN
word_att_size: 100  # size of the word-level attention layer (also the size of the word context vector)
sentence_att_size: 100  # size of the sentence-level attention layer (also the size of the sentence context vector)
dropout: 0.3  # dropout

# checkpoint saving parameters
checkpoint_path: /home/mtsirlin/scratch/Text-Classification/checkpoints  # path to save checkpoints, null if never save checkpoints
checkpoint_basename: checkpoint_han_dbpedia_5shot_4  # basename of the checkpoint

# training parameters
start_epoch: 0  # start at this epoch
batch_size: 1  # batch size
lr: 0.001  # learning rate
lr_decay: 0.3  # a factor to multiply learning rate with (0, 1)
workers: 4  # number of workers for loading data in the DataLoader
num_epochs: 20  # number of epochs to run
grad_clip: null  # clip gradients at this value, null if never clip gradients
print_freq: 2000  # print training status every __ batches
checkpoint: null  # path to model checkpoint, null if none
# tensorboard
tensorboard: False  # enable tensorboard or not?
log_dir: /home/mtsirlin/scratch/Text-Classification/logs/han  # folder to save logs for tensorboard, only makes sense when `tensorboard: True`
